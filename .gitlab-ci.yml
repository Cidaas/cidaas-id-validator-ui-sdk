stages:
    - prepare
    - release

variables:
    DOCKER_DRIVER: overlay2
    SCRIPTS_PATH: cidaas-versioning-ci-templates/scripts/js-sdk

get_version:
    image: makocchi/alpine-git-curl-jq
    stage: prepare
    script:
        - echo "PACKAGE_VERSION="$(cat package.json | jq .version)"" >> variables.env
    artifacts:
      reports:
        dotenv:
          - variables.env
    only:
        - main

release:
    stage: release
    image: node:14
    dependencies:
        - get_version
    before_script:
        - echo "init.author.name=$CIM_NPM_AUTHOR_NAME" >> .npmrc
        - echo "init.author.email=$CIM_NPM_AUTHOR_EMAIL" >> .npmrc
        - echo "init.author.url=$CIM_NPM_AUTHOR_URL" >> .npmrc
        - echo "registry=$CIM_NPM_REGISTRY" >> .npmrc
        - echo "@types:registry=$CIM_NPM_TYPES_REGISTRY" >> .npmrc
        - echo "@schematics:registry=$CIM_NPM_TYPES_REGISTRY" >> .npmrc
        - echo "@ngtools:registry=$CIM_NPM_TYPES_REGISTRY" >> .npmrc
        - echo "@angular-devkit:registry=$CIM_NPM_TYPES_REGISTRY" >> .npmrc
        - echo "@angular:registry=$CIM_NPM_TYPES_REGISTRY" >> .npmrc
        - echo "email=$CIM_NPM_EMAIL" >> .npmrc
        - echo "always-auth=true" >> .npmrc
        - mkdir -p ~/.docker
        - echo $CIM_DOCKER_REG_NEXUS > ~/.docker/config.json
    script:
        - apt update && apt install jq -y
        - npm install -g npm-cli-adduser
        - npm-cli-adduser --registry=http://nexus.widas.de/repository/npm-all/ --username $NPM_USERNAME --password $NPM_PASSWORD --email $NPM_EMAIL
        - npm install --save-dev semantic-release
        - npm install typescript -g
        - npm run build
        - rm -rf ./lib ./scripts ./spec .gitlab-ci.yml ./cidaas-versioning-ci-templates
        - npm run semantic-release
        - echo "PACKAGE_VERSION="$(cat package.json | jq .version)"" >> variables.env
    artifacts:
      reports:
        dotenv:
          - variables.env
    only:
        -  main
